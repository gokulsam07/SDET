{
	"info": {
		"_postman_id": "27463eac-a219-4e61-b1d9-0b999343dddc",
		"name": "JIRAMarathon",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17774080"
	},
	"item": [
		{
			"name": "Create New Issue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var res = pm.response.json();\r",
							"var id = res.id;\r",
							"pm.globals.set(\"issueId\",id);\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fields\": {\r\n        \"project\": {\r\n            \"key\": \"TES\"\r\n        },\r\n        \"summary\": \"Create a new JIRA issue using Postman for Marathon\",\r\n        \"description\": \"Creating a Bug in JIRA using JIRA API with the help of Postman\",\r\n        \"issuetype\": {\r\n            \"name\": \"Bug\"\r\n        }\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseJIRA}}/rest/api/2/issue",
					"host": [
						"{{baseJIRA}}"
					],
					"path": [
						"rest",
						"api",
						"2",
						"issue"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get issue after creation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var id = pm.globals.get(\"issueId\");\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseJIRA}}/rest/api/2/issue/{{issueId}}",
					"host": [
						"{{baseJIRA}}"
					],
					"path": [
						"rest",
						"api",
						"2",
						"issue",
						"{{issueId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update the issue details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fields\": {\r\n        \"description\": \"Updated the details of field description using PUT call\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseJIRA}}/rest/api/2/issue/{{issueId}}",
					"host": [
						"{{baseJIRA}}"
					],
					"path": [
						"rest",
						"api",
						"2",
						"issue",
						"{{issueId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check after updating issue details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Updated the details of field description using PUT call\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseJIRA}}/rest/api/2/issue/{{issueId}}",
					"host": [
						"{{baseJIRA}}"
					],
					"path": [
						"rest",
						"api",
						"2",
						"issue",
						"{{issueId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the updated JIRA issue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseJIRA}}/rest/api/2/issue/{{issueId}}",
					"host": [
						"{{baseJIRA}}"
					],
					"path": [
						"rest",
						"api",
						"2",
						"issue",
						"{{issueId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get issue after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Issue does not exist or you do not have permission to see it\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseJIRA}}/rest/api/2/issue/{{issueId}}",
					"host": [
						"{{baseJIRA}}"
					],
					"path": [
						"rest",
						"api",
						"2",
						"issue",
						"{{issueId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "ATATT3xFfGF0d39TsozfFQWR0Hvr0UfPqKKtyFJxQvnaGGtSvez8FvOvhfzSTapOBEUGx0ZAdIbWfM5tjeU8rFw7Rh72pbanmBdYhtysnC3yH89HMn-lXz9PTGKVKtWFV2vp6GyZ_75P27LqLCAbHxqOjYds1SNn5oFZQFDi3ufeUI3cJwdCy20=5543D93F",
				"type": "string"
			},
			{
				"key": "username",
				"value": "Feb2023restAPI@gmail.com",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}